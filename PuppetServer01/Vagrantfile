# -*- mode: ruby -*-
# vi: set ft=ruby :

$script = <<SCRIPT
yum install -y git
git clone https://github.com/netman2k/puppet-repository.git
cd puppet-repository && ./scripts/init.sh

hostnamectl set-hostname puppet01.example.com
systemctl restart systemd-hostnamed
systemctl stop firewalld

# Fixing the secondary interface IP unassignment
systemctl resetart network

#echo "dns_alt_names = puppet.example.com, puppet" >> /etc/puppetlabs/puppet/puppet.conf

echo "======== Set dummy PuppetCA host record... =========="
echo "192.168.200.10 puppetca01.example.com puppetca.example.com puppet" >> /etc/hosts
echo "192.168.200.11 puppet01.example.com" >> /etc/hosts

echo "======== Disabling SSL certificate CA feature on PuppetServer... ========="
sed -i 's/^\(puppetlabs.services.*certificate-authority-service\)$/#\1/' /etc/puppetlabs/puppetserver/services.d/ca.cfg
sed -i 's/^#\(puppetlabs.services.*certificate-authority-disabled-service.*\)$/\1/' /etc/puppetlabs/puppetserver/services.d/ca.cfg

echo "======== Requesting a certificate with subject alternative names... =========="
echo "Now you need to sign certificate request from the CA server by running this command"
echo "# puppet cert sign puppet01.example.com --allow-dns-alt-names"

source /etc/profile.d/puppet-agent.sh
puppet agent -t --server=puppetca.exmple.com --ca_server=puppetca.example.com --dns_alt_names=puppet.example.com,puppet  -w 30

echo "========= Set SSL settings on jetty... =========="
sed -i 's/^}//' /etc/puppetlabs/puppetserver/conf.d/webserver.conf
echo "    ssl-cert: /etc/puppetlabs/puppet/ssl/certs/puppet01.example.com.pem" >> /etc/puppetlabs/puppetserver/conf.d/webserver.conf
echo "    ssl-key: /etc/puppetlabs/puppet/ssl/private_keys/puppet01.example.com.pem" >> /etc/puppetlabs/puppetserver/conf.d/webserver.conf
echo "    ssl-ca-cert: /etc/puppetlabs/puppet/ssl/certs/ca.pem" >> /etc/puppetlabs/puppetserver/conf.d/webserver.conf
echo "}" >> /etc/puppetlabs/puppetserver/conf.d/webserver.conf

systemctl start puppetserver

SCRIPT


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "puppetlabs/centos-7.0-64-nocm"

#	config.vm.provision "puppet" do |puppet|
#		puppet.options = "--verbose --debug"
#	end
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.200.11"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.memory = "3072"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: $script
	
end
